# use a fixed random seed to guarantee that when you run the code twice you will get the same outcome
manual_seed: 0
# model configuration
device: 'cuda:0'

model:
  # model class
  name: UNet3D_aspp_DS
  # UNet3D
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
  # determines the order of operators in a single layer (crg - Conv3d+ReLU+GroupNorm)
  layer_order: crg
  # feature maps scale factor
  f_maps: 32
  # number of groups in the groupnorm
  num_groups: 2
  # apply element-wise nn.Sigmoid after the final 1x1 convolution, otherwise apply nn.Softmax
  final_sigmoid: True
# trainer configuration
trainer:
  # path to the checkpoint directory
  checkpoint_dir: /home/chenzhihao/MIP/code/LungSeg/model_pth/
  # path to latest checkpoint; if provided the training will be resumed from that checkpoint
#  pre_trained: '/home/chenzhihao/MIP/code/3d_unet_v2/3dunet/last_checkpoint.pytorch'
#  resume: '/home/chenzhihao/MIP/code/3d_unet_v2/model_pth/DS_Global/UnCut/DS_Global/last_checkpoint.pytorch'
#  resume: /home/chenzhihao/MIP/code/3d_unet_v2/model_pth/DS_Global/UnCut/last_checkpoint.pytorch
  resume: null
  # how many iterations between validations
  validate_after_iters: 500
  # how many iterations between tensorboard logging
  log_after_iters: 100
  # max number of epochs
  epochs: 80
  # max number of iterations
  iters: 100000
  # model with higher eval score is considered better
  eval_score_higher_is_better: True
# optimizer configuration
optimizer:
  # initial learning rate
  learning_rate: 0.002
  # weight decay
  weight_decay: 0.0001
# loss function configuration
loss:
  # loss function to be used during training
  name: BCEWithLogitsLoss
  # A manual rescaling weight given to each class.
  loss_weight: null
  # a target value that is ignored and does not contribute to the input gradient
  ignore_index: null
# evaluation metric configuration
eval_metric:
  name: DiceCoefficient
  # a target label that is ignored during metric evaluation
  ignore_index: 0
lr_scheduler:
  name: MultiStepLR
  milestones: [10, 20]
  gamma: 0.2
# data loaders configuration
loaders:
  DS_module: 'fnd'
  # train patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
  train_patch: [64, 128, 128]
  # train stride between patches
  train_stride: [16, 32, 32]
  # validation patch (can be bigger than train patch since there is no backprop)
  val_patch: [64, 128, 128]
  # validation stride (validation patches doesn't need to overlap)
  val_stride: [64, 128, 128]
  # path to the raw data within the H5
  raw_internal_path: raw
  # path to the the label data withtin the H5
  label_internal_path: label

  patch_shape: [64, 128, 128]
  # paths to the training datasets
#  train_path:  '/home/Raiser/Documents/czh/data/StructSeg_2019/Thoracic_OAR/train'
  train_path: '/home/ext/chenzhihao/Datasets/StructSeg_2019/Lung_GTV/train'
  # paths to the validation datasets
#  val_path: '/home/Raiser/Documents/czh/data/StructSeg_2019/Thoracic_OAR/test'
#  val_path: '/home/ext/chenzhihao/Datasets/StructSeg_2019/Lung_GTV/test'
  val_path: '/home/ext/chenzhihao/Datasets/StructSeg_2019/Lung_GTV/test'

  # how many subprocesses to use for data loading
  num_workers: 8
  # data transformations/augmentations
  transformer:
    # window width and level
    # task3,task4: WW=1500, WL=-500
    # task1,task2: WW=350, WL=40
    WW: 1500
    WL: -500
    # ignore background for fast training
    ignore_bg: 0.8
    reshape: [96,128,128]
    train:
      raw:
        - name: Normalize
#        - name: RandomFlip
#        - name: RandomRotate90
#        - name: RandomRotate
#         # rotate only in ZY only
#          axes: [[2, 1]]
#          angle_spectrum: 15
#          mode: reflect
#        - name: ElasticDeformation
#          spline_order: 3
#        - name: RandomContrast
        - name: ToTensor
          expand_dims: true
#          resize: true
      label:
#        - name: RandomFlip
#        - name: RandomRotate90
#        - name: RandomRotate
#          # rotate only in ZY only
#          axes: [[2, 1]]
#          angle_spectrum: 15
#          mode: reflect
#        - name: ElasticDeformation
#          spline_order: 0
        - name: ToTensor
          expand_dims: false
#          resize: true
          dtype: 'long'
    test:
      raw:
        - name: Normalize
        - name: ToTensor
          expand_dims: true
#          resize: false
      label:
        - name: ToTensor
          expand_dims: false
#          resize: false
          dtype: 'long'
